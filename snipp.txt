		for (int i = -halfWSize; i <= halfWSize; ++i) {
			for (int j = -halfWSize; j <= halfWSize; ++j) {
				int pJ = point.pt.x + j;
				int pI = point.pt.y+i;
				
				if (pI < in.rows-1 && pI>0 && pJ < in.cols-1 && pJ>0) {
					float diffI = in.at<uchar>(pI + 1, pJ) - in.at<uchar>(pI - 1, pJ);
					float diffJ = in.at<uchar>(pI + 1, pJ) - in.at<uchar>(pI - 1, pJ);
					float m = sqrtf(pow(diffI, 2.0) + pow(diffJ, 2.0));
					M.at<float>(pI, pJ) = m;
					float theta = atan2(diffI, diffJ) * 180 / PI;
					if (theta < 0) theta += 360;
					angle.at<float>(pI, pJ) = theta;
					int binIdx = static_cast<int>(theta / (360 / binNum));
					bin[binIdx] += m;
				}
			}
		}